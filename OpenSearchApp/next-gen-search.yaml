AWSTemplateFormatVersion: 2010-09-09
Description: Template to provision OpenSearch cluster for NextGen ML search

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Required Parameters
        Parameters:
          - AppName
    ParameterLabels:
      AppName:
        default: Name of the overall application
      
      
      
Parameters:
  SageMakerIAMRole:
    Description: Name of IAM role that will be created by this cloud formation template. The role name must _not_ already exist in your AWS account.
    Type: String
    Default: "MLIAMRole"  
  AppName:
    Default: opensearch-ml-search
    Type: String
    AllowedValues: [opensearch-ml-search]
    Description: Name of the overall application, this is used while creating the ML model endpoint.
  OpenSearchMasterUsername:
    AllowedPattern: '^[a-zA-Z0-9]+$'
    Default: master
    Description: User name for the account that will be added to the OpenSearch cluster.
    MaxLength: '25'
    MinLength: '5'
    Type: String
  OpenSearchMasterPassword:
    AllowedPattern: '(?=^.{8,32}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*'
    Description: Password for the account named above. Must be at least 8 characters containing letters, numbers and symbols
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
    Default: ML-Search123!

Mappings: 
  RegionMap: 
    us-east-1:
      HVM64: ami-041feb57c611358bd
    us-west-2:
      HVM64: ami-07d07d65c47e5aa90
    eu-west-1:
      HVM64: ami-0b9fd8b55a6e3c9d5

Resources:
  OpenSearchSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub OpenSearchSecret-${AWS::StackName}
      Description: OpenSearch username and password
      SecretString: !Sub '{ "username" : "${OpenSearchMasterUsername}", "password" : "${OpenSearchMasterPassword}" }'

  KendraRescore:
    Type: AWS::KendraRanking::ExecutionPlan
    Properties:
      CapacityUnits: 
        RescoreCapacityUnits: 2
      Description: "re-ranking using kendra"
      Name: "kendra-rerank"
      
  NotebookInstanceLifecycleConfiguration:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      NotebookInstanceLifecycleConfigName: webapp-app-launch
      OnCreate: 
        - Content:
            Fn::Base64: 
              Fn::Sub:
                - |
                  #!/bin/bash
                  set -e
                  cd /home/ec2-user/SageMaker
                  sudo yum install awscli
                  sudo yum install zip
                  sudo yum -y install git
                  git clone -b Next-Gen-Search-Workshop https://github.com/aws-samples/AI-search-with-amazon-opensearch-service.git
                  echo ${s3Bucket}
                  wget https://d2d5zhnefzqxjo.cloudfront.net/neural-sparse-biencoder.tar.gz
                  aws s3 cp /home/ec2-user/SageMaker/neural-sparse-biencoder.tar.gz s3://${s3Bucket}
                  cd AI-search-with-amazon-opensearch-service
                  sudo chmod -R 0777 /home/ec2-user/SageMaker
                  source /home/ec2-user/anaconda3/bin/activate python3
                  pip install --upgrade streamlit
                  pip install boto3
                  pip install requests_aws4auth
                  pip install opensearch-py
                  pip3 install torch==1.11.0
                  pip3 install --pre torch torchvision --extra-index-url https://download.pytorch.org/whl/nightly/cpu
                  pip install -U sentence-transformers
                  pip install nltk
                  pip install ruamel_yaml
                  pip install langchain
                  pip install langchain-core
                  pip install langchain-community
                  pip install langchain-experimental
                  pip install lark
                  nohup streamlit run OpenSearchApp/app.py --server.baseUrlPath="/proxy/absolute/8501" &
                - s3Bucket: !Ref s3BucketHosting


  SagemakerNotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      NotebookInstanceName: ml-search-opensearch
      InstanceType: ml.c5.18xlarge
      RoleArn: !GetAtt NBRole.Arn
      VolumeSizeInGB: 1000
      LifecycleConfigName: !GetAtt NotebookInstanceLifecycleConfiguration.NotebookInstanceLifecycleConfigName

  Model:
    Type: "AWS::SageMaker::Model"
    DependsOn: [ SagemakerNotebookInstance ]
    Properties:
      ModelName: "neural-sparse-model"
      PrimaryContainer:
        Image: !Sub "763104351884.dkr.ecr.${AWS::Region}.amazonaws.com/pytorch-inference:2.0-cpu-py310"
        ModelDataUrl: !Join ['', ['s3://', !Join [ '-', [ "ml-search", !Select [ 4, !Split [ '-', !Select [ 2, !Split [ '/', !Ref AWS::StackId ] ] ] ] ] ], '/', 'neural-sparse-biencoder.tar.gz']]
    
      ExecutionRoleArn: !GetAtt NBRole.Arn

  EndpointConfig:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      EndpointConfigName: "neural-sparse-model-config"
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1.0
          InstanceType: ml.m5.2xlarge
          ModelName: !GetAtt Model.ModelName
          VariantName: !GetAtt Model.ModelName
  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointConfigName:
        !GetAtt EndpointConfig.EndpointConfigName
      EndpointName: "neural-sparse-model"
        

  OpenSearchSagemakerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: opensearch-sagemaker-role
      Policies:
        - PolicyName: SageMakerAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "sagemaker:InvokeEndpointAsync"
                  - "sagemaker:InvokeEndpoint"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "bedrock:*"
                Resource:
                  - "*"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - opensearchservice.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  NBRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: CustomNotebookAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "es:ESHttp*"
                Resource:
                  - !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*
              - Effect: Allow
                Action:
                  - "s3:*"
                  - "dynamodb:*"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/opensearch-sagemaker-role
        - PolicyName: lambda-ssm-full-access 
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:*"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "ssm:*"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "kendra-ranking:*"
                Resource:
                  - "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonBedrockFullAccess
        - arn:aws:iam::aws:policy/AmazonRekognitionFullAccess
      MaxSessionDuration: 43200
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - sagemaker.amazonaws.com
            Action:
              - 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
          

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref SageMakerIAMRole
      Policies:
        - PolicyName: CustomNotebookAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: ReadFromOpenSearch
                Effect: Allow
                Action:
                  - "es:ESHttp*"
                Resource:
                  - !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*
              - Sid: ReadWriteFromECR
                Effect: Allow
                Action:
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:DescribeImages"
                  - "ecr:DescribeRepositories"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:ListImages"
                  - "ecr:PutImage"
                  - "ecr:UploadLayerPart"
                  - "ecr:CreateRepository"
                  - "ecr:GetAuthorizationToken"
                  - "ec2:DescribeAvailabilityZones"
                Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
        - arn:aws:iam::aws:policy/TranslateReadOnly
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - sagemaker.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  s3BucketHosting:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ '-', [ "ml-search",!Select [ 4, !Split [ '-', !Select [ 2, !Split [ '/', !Ref AWS::StackId ] ] ] ] ] ]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  OpenSearchServiceDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*/*
      EngineVersion: 'OpenSearch_2.11'
      ClusterConfig:
        InstanceType: "r6g.2xlarge.search"
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: True
        VolumeSize: 20
        VolumeType: 'gp3'
      AdvancedSecurityOptions:
        AnonymousAuthEnabled: False
        Enabled: True
        InternalUserDatabaseEnabled: True
        MasterUserOptions:
          MasterUserName: !Sub ${OpenSearchMasterUsername}
          MasterUserPassword: !Sub ${OpenSearchMasterPassword}
      NodeToNodeEncryptionOptions:
        Enabled: True
      EncryptionAtRestOptions:
        Enabled: True
        KmsKeyId: alias/aws/es
      DomainEndpointOptions:
        EnforceHTTPS: True
      Tags:
        - {"Key" : "app","Value" : "ml-search"}

  DemoDynamoDBTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "store_key"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "store_key"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: "dynamo_store_key_value"


  
Outputs:

  OpenSearchDomainEndpoint:
    Description: OpenSearch domain endpoint
    Value:
      'Fn::GetAtt':
        - OpenSearchServiceDomain
        - DomainEndpoint

  DynamoDBTable:
    Description: DynamoDBTable
    Value: !Ref DemoDynamoDBTable

  OpenSearchDomainName:
    Description: OpenSearch domain name
    Value: !Ref OpenSearchServiceDomain

  Region:
    Description: Deployed Region
    Value: !Ref AWS::Region

  WebappRoleArn:
    Description: This role is used by the web application to interact with OpenSearch
    Value: !GetAtt NBRole.Arn

  KendraResourcePlanID:
    Description: KendraResourcePlanID for Kendra rescore plugin
    Value: !Ref KendraRescore
  
  OpenSearchSecret:
    Description: Name of the OpenSearch secret in Secrets Manager
    Value: !Ref OpenSearchSecret
  
  WebApplicationURL:
    Description: URL of the web application
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt SagemakerNotebookInstance.NotebookInstanceName
        - '.'
        - !Sub 'notebook.${AWS::Region}.sagemaker.aws/proxy/absolute/8501'